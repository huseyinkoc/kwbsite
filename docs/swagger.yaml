definitions:
  models.ActivityLog:
    properties:
      action:
        description: 'Eylem türü (örnek: create, update, delete)'
        type: string
      details:
        description: Ek detaylar
        type: string
      id:
        type: string
      module:
        description: 'Modül adı (örnek: posts, comments)'
        type: string
      timestamp:
        description: Zaman damgası
        type: string
      user_id:
        description: Aktiviteyi gerçekleştiren kullanıcı
        type: string
      username:
        description: Kullanıcı adı
        type: string
    type: object
  models.Category:
    type: object
  models.Comment:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      likes:
        type: integer
      parent_id:
        type: string
      post_id:
        type: string
      reactions:
        additionalProperties:
          type: integer
        description: Reaksiyonlar (emoji ifadesi ve sayısı)
        type: object
      replies:
        items:
          type: string
        type: array
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.ContactMessage:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      message:
        type: string
      name:
        type: string
      resolved_by:
        type: string
      status:
        description: '"new", "in_progress", "resolved"'
        type: string
      subject:
        type: string
      updated_at:
        type: string
    required:
    - email
    - message
    - name
    type: object
  models.Language:
    type: object
  models.LocalizedContent:
    type: object
  models.LocalizedField:
    properties:
      content:
        type: string
      slug:
        type: string
      title:
        type: string
    type: object
  models.Login:
    properties:
      password:
        example: ADsdsasWDD!!!8
        type: string
      username:
        example: mustafakemal
        type: string
    type: object
  models.MaintenanceToggleMode:
    properties:
      enable:
        type: boolean
      message:
        additionalProperties:
          type: string
        type: object
    type: object
  models.MetaTag:
    properties:
      description:
        type: string
      keywords:
        description: Dizi olarak tanımlandı
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  models.Page:
    type: object
  models.Post:
    properties:
      author_id:
        type: string
      category_ids:
        items:
          type: string
        type: array
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      localizations:
        additionalProperties:
          $ref: '#/definitions/models.LocalizedField'
        description: Dil koduna göre içerik
        type: object
      meta_tags:
        additionalProperties:
          $ref: '#/definitions/models.MetaTag'
        description: Dil kodu ve SEO bilgileri
        type: object
      publish_date:
        description: Yayınlanma tarihi
        type: string
      status:
        description: draft, published, scheduled
        type: string
      tag_ids:
        items:
          type: string
        type: array
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.RequestPasswordReset:
    properties:
      email:
        example: abc@mail.com
        type: string
    type: object
  models.ResetPasswordRequest:
    properties:
      new_password:
        example: newpassword123
        type: string
    type: object
info:
  contact: {}
paths:
  /activity-logs:
    get:
      description: Retrieve all activity logs with their details
      produces:
      - application/json
      responses:
        "200":
          description: List of activity logs
          schema:
            items:
              $ref: '#/definitions/models.ActivityLog'
            type: array
        "500":
          description: Failed to retrieve activity logs
          schema:
            additionalProperties: true
            type: object
      summary: Get all activity logs
      tags:
      - Activity Logs
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: User login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token and user details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid credentials
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - Authentication
  /auth/request-password-reset:
    post:
      consumes:
      - application/json
      description: Sends a password reset email to the user
      parameters:
      - description: User email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/models.RequestPasswordReset'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset email sent
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Email not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to send password reset email
          schema:
            additionalProperties: true
            type: object
      summary: Request password reset
      tags:
      - Authentication
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Resets a user's password using a valid reset token
      parameters:
      - description: Password reset token
        in: query
        name: token
        required: true
        type: string
      - description: New password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request payload or token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update password
          schema:
            additionalProperties: true
            type: object
      summary: Reset password
      tags:
      - Authentication
  /auth/send-verification/{userID}:
    post:
      description: Sends a verification email to a specific user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      responses:
        "200":
          description: Verification email sent
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to send verification email
          schema:
            additionalProperties: true
            type: object
      summary: Send verification email
      tags:
      - Authentication
  /auth/verify-email:
    get:
      description: Verifies a user's email using a token
      parameters:
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      responses:
        "200":
          description: Email verified successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid or expired token
          schema:
            additionalProperties: true
            type: object
      summary: Verify email
      tags:
      - Authentication
  /categories:
    get:
      description: Retrieve all categories with their details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all categories
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Add a new category with its details
      parameters:
      - description: Category details
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new category
      tags:
      - Categories
  /categories/{id}:
    delete:
      description: Remove a category by its unique identifier
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid category ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Category not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a category
      tags:
      - Categories
    get:
      description: Retrieve a single category by its unique identifier
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid category ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Category not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get a category by ID
      tags:
      - Categories
    put:
      consumes:
      - application/json
      description: Update a category's details
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated category details
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid request payload or category ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Category not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update a category
      tags:
      - Categories
  /comments:
    post:
      consumes:
      - application/json
      description: Add a new comment to a post or as a reply
      parameters:
      - description: Comment body
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: Comment created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new comment
      tags:
      - Comments
  /comments/{comment_id}:
    delete:
      description: Delete a comment by its ID
      parameters:
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: string
      responses:
        "200":
          description: Comment deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Comment not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a comment
      tags:
      - Comments
    put:
      consumes:
      - application/json
      description: Update a comment by its ID
      parameters:
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: string
      - description: Updated comment body
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: Comment updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Comment not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update a comment
      tags:
      - Comments
  /comments/{comment_id}/like:
    post:
      consumes:
      - application/json
      description: Add a like to a specific comment by its ID
      parameters:
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Comment liked successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Comment not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Like a comment
      tags:
      - Comments
  /comments/{comment_id}/reaction:
    post:
      consumes:
      - application/json
      description: Add a reaction (e.g., like, dislike, emoji) to a comment by its
        ID
      parameters:
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: string
      - description: "Reaction (e.g., \U0001F60A, \U0001F621, ❤️)"
        in: query
        name: reaction
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Reaction added successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Comment not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Add a reaction to a comment
      tags:
      - Comments
  /comments/{comment_id}/reply:
    post:
      consumes:
      - application/json
      description: Add a reply to a specific comment by its ID
      parameters:
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: string
      - description: Reply body
        in: body
        name: reply
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: Reply added successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Comment not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Add a reply to a comment
      tags:
      - Comments
  /comments/{post_id}:
    get:
      consumes:
      - application/json
      description: Retrieve all comments for a specific post
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Comment'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Comments not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get comments by post ID
      tags:
      - Comments
  /contacts:
    get:
      description: Retrieve all contact messages sent by users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ContactMessage'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all contact messages
      tags:
      - Contacts
    post:
      consumes:
      - application/json
      description: Add a new contact message sent by a user
      parameters:
      - description: Contact message details
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/models.ContactMessage'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ContactMessage'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new contact message
      tags:
      - Contacts
  /contacts/{id}:
    delete:
      description: Remove a contact message by its unique identifier
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid contact ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Contact message not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a contact message
      tags:
      - Contacts
    get:
      description: Retrieve a single contact message by its unique identifier
      parameters:
      - description: Contact Message ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ContactMessage'
        "400":
          description: Invalid contact ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Contact message not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get a contact message by ID
      tags:
      - Contacts
  /languages:
    get:
      description: Retrieve all languages, including active and default configurations
      parameters:
      - description: Active language code (e.g., 'en', 'tr')
        in: query
        name: lang
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of languages with active and default settings
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to retrieve languages
          schema:
            additionalProperties: true
            type: object
      summary: Get all languages
      tags:
      - Languages
    post:
      consumes:
      - application/json
      description: Add a new language configuration
      parameters:
      - description: Language configuration
        in: body
        name: language
        required: true
        schema:
          $ref: '#/definitions/models.Language'
      produces:
      - application/json
      responses:
        "200":
          description: Language created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create language
          schema:
            additionalProperties: true
            type: object
      summary: Create a new language
      tags:
      - Languages
  /languages/{id}:
    delete:
      description: Remove a language configuration by its ID
      parameters:
      - description: Language ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Language deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid language ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to delete language
          schema:
            additionalProperties: true
            type: object
      summary: Delete a language
      tags:
      - Languages
    put:
      consumes:
      - application/json
      description: Update an existing language configuration by its ID
      parameters:
      - description: Language ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated language fields
        in: body
        name: update
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Language updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid language ID or request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update language
          schema:
            additionalProperties: true
            type: object
      summary: Update a language
      tags:
      - Languages
  /localized-content:
    post:
      consumes:
      - application/json
      description: Add new localized content with translations
      parameters:
      - description: Localized content details
        in: body
        name: content
        required: true
        schema:
          $ref: '#/definitions/models.LocalizedContent'
      produces:
      - application/json
      responses:
        "200":
          description: Content created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create content
          schema:
            additionalProperties: true
            type: object
      summary: Create localized content
      tags:
      - Localized Content
  /localized-content/{id}:
    get:
      description: Retrieve localized content in a specific language
      parameters:
      - description: Localized Content ID
        in: path
        name: id
        required: true
        type: string
      - description: Language code (e.g., 'en', 'tr')
        in: query
        name: lang
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Localized content details
          schema:
            $ref: '#/definitions/models.LocalizedField'
        "400":
          description: Invalid content ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Content not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to fetch content
          schema:
            additionalProperties: true
            type: object
      summary: Get localized content by ID
      tags:
      - Localized Content
  /maintenance:
    post:
      consumes:
      - application/json
      description: Enable or disable maintenance mode with a multilingual message
      parameters:
      - description: Maintenance mode settings
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.MaintenanceToggleMode'
      produces:
      - application/json
      responses:
        "200":
          description: Maintenance mode status updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update maintenance mode
          schema:
            additionalProperties: true
            type: object
      summary: Toggle maintenance mode
      tags:
      - Maintenance
  /pages:
    get:
      description: Retrieve all pages with their details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Page'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all pages
      tags:
      - Pages
    post:
      consumes:
      - application/json
      description: Add a new page with its details
      parameters:
      - description: Page details
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/models.Page'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Page'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new page
      tags:
      - Pages
  /pages/{id}:
    delete:
      description: Remove a page by its unique identifier
      parameters:
      - description: Page ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a page
      tags:
      - Pages
    get:
      description: Retrieve a single page by its unique identifier
      parameters:
      - description: Page ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Page'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a page by ID
      tags:
      - Pages
    put:
      consumes:
      - application/json
      description: Update a page's details
      parameters:
      - description: Page ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated page details
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/models.Page'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Page'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a page
      tags:
      - Pages
  /posts:
    get:
      description: Retrieve all posts with their details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
      summary: Get all posts
      tags:
      - Posts
    post:
      consumes:
      - application/json
      description: Create a new post with localized content, tags, and categories
      parameters:
      - description: Post Data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new post
      tags:
      - Posts
  /posts/{id}:
    delete:
      description: Remove a post permanently by its unique identifier
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a post
      tags:
      - Posts
    get:
      description: Retrieve a single post by its unique identifier, with localized
        content
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      - description: Language code for localization (e.g., 'en', 'tr')
        in: query
        name: lang
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a post by ID
      tags:
      - Posts
    put:
      consumes:
      - application/json
      description: Update post details such as localized content, tags, and categories
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      - description: Post Data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a post
      tags:
      - Posts
  /posts/filter:
    get:
      description: Retrieve posts by category, tag, or status
      parameters:
      - description: Category ID to filter posts
        in: query
        name: category
        type: string
      - description: Tag ID to filter posts
        in: query
        name: tag
        type: string
      - description: Status to filter posts (e.g., 'draft', 'published')
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get filtered posts
      tags:
      - Posts
  /posts/lang/{lang}:
    get:
      description: Retrieve all posts localized to a specific language
      parameters:
      - description: Language code (e.g., 'en', 'tr')
        in: path
        name: lang
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get posts by language
      tags:
      - Posts
swagger: "2.0"
